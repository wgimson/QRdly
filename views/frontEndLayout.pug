doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, shrink-to-fit=no')
    meta(name='theme-color', content='#4DA5F4')
    meta(name='csrf-token', content=_csrf)
    meta(name="description", content="Authors: W.H. Gimson, A. G. Gimson, Description: A self shopper app for vending events")
    title #{title} - Calendar
    link(rel='shortcut icon', href='/favicon.png')
    link(rel='stylesheet', href='/css/main.css')
    link(rel="manifest", href="/js/pwa.webmanifest")
    link(rel="apple-touch-icon", href="/example.png")
    link(href='/fullcalendar/main.css' rel='stylesheet')
    link(hrel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css")
    style.
        .error {
            font-size: 12px;
            color: red;
            width: 100%;
        }
        .ui-dialog .ui-dialog-titlebar {
            text-align: center;
            width: 100%;
            font-size: 20px;
        }
        .ui-dialog {
            background-color: #F8F9F9;
        }
    block head

  body

    .container
      include partials/flash
      block content

    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src='/js/lib/jquery.min.js')
    script(src='/js/lib/popper.min.js')
    script(src='/js/lib/bootstrap.min.js')
    script(src='/js/main.js')
    script(src='/js/pwa.js')
    script(src="https://unpkg.com/bootstrap-table@1.18.3/dist/bootstrap-table.min.js")
    script(src='/fullcalendar/main.js')
    script(src="https://code.jquery.com/ui/1.12.0-rc.2/jquery-ui.min.js")
    script(src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.js")
    script.
        document.addEventListener('DOMContentLoaded', function() {
            function clearForm() {
                $('#name').val("")
                $('#apptDate').val("")
                $('#apptTime').val("")
                $('#contact-input').val("")
            }
            var end = null;
            $('#apptTime').on('change', function(){
                var time = $(this).val()
                let minutes = parseInt(time.split(':')[1])
                if(minutes % 30 !== 0){
                    alert("meeting time must be on the hour or 1/2 hour. ex: 9:00 or 9:30")
                    $(this).val("")
                }
            })
            $('#apptDialogForm').validate({
                rules: {
                    name: "required",
                    apptDate: "required",
                    apptTime: "required",
                    contact: "required",
                },
                messages: {
                    name: "*required field missing",
                    apptDate: "*required field missing",
                    apptTime: "*required field missing",
                    contact: "*required field missing",
                }
            });

            //front end calendar
            $( "#apptDialog" ).dialog({
                dialogClass: "no-close",
                buttons: [
                    {
                        text: "Make appointment",
                        click: function() {
                            let csrf = $('meta[name="csrf-token"]').attr("content")
                            axios.defaults.headers.common['X-CSRF-TOKEN'] = csrf
                            var slotIsFull = false;
                            let start = $('#apptDate').val() + 'T' + $('#apptTime').val()
                            let startHour = start.split("T")[1].split(":")[0]
                            let startDate = start.split("T")[0]

                            parsedMeetingArray.forEach(function(meeting){
                                let tempDate = meeting.start.split("T")[0]
                                let tempStart = meeting.start.split("T")[1].split(":")[0]
                                if(startHour === tempStart && startDate === tempDate){
                                    slotIsFull = true;
                                }
                            })
                            if($("#apptDialogForm").valid()) {
                                if( ! slotIsFull ) {
                                    axios.post('/meeting/create',
                                        {
                                            name: $('#name').val(),
                                            date: $('#apptDate').val(),
                                            time: $('#apptTime').val(),
                                            contact: $('#contact-input').val(),
                                            businessName: $('#business').val(),
                                            adminId: $('#admin-id').val(),
                                        },
                                        {
                                            withCredentials: true
                                        })
                                    .then(function (response) {
                                        let title = "Meeting w / " + $('#business').val() + " at " + $('#apptTime').val() + " on " + $('#apptDate').val()
                                        let start = $('#apptDate').val() + "T" + $('#apptTime').val()
                                        frontEndCalendar.addEvent({
                                            title: title,
                                            start: start,
                                            color: '#93c47ed'
                                        })
                                        $( '#apptDialog' ).dialog( "close" )
                                        clearForm()

                                    })
                                    .catch(function (error) {
                                        console.log(error);
                                    });
                                }
                                else {
                                    $('#errorMessage').dialog({
                                        dialogClass: "no-close",
                                        body: "Slots full!",
                                        title: "/****** Time slot is full ******/",
                                        minWidth: 350,
                                        modal: true,
                                        buttons: {
                                            OK: function() {
                                                $(this).dialog("close")
                                            }

                                        },
                                    })
                                    $('#apptTime').val("")
                                }
                            }
                        }
                    },
                    {
                        text: "Cancel",
                        click: function() {
                            $( this ).dialog( "close" )
                            clearForm();
                        }
                    }
                ],
                
                resizeable: true,
                autoOpen: false,
                minWidth: 350,  
                minHeight: 300,
                show: { effect: "blind", duration: 100 }

            });
            //get all meetings for this company
            let meetings = [];
            if (document.getElementById('meetings')) {
                meetings = document.getElementById('meetings').value
            }
            let meetingArray = JSON.parse(meetings);
            var parsedMeetingArray = [];
            let meetingMax = 2;
            const hourArray = ['08', '09','10', '11','12', '13','14','15', '16','17']
            var apptCounter = [ 0, 0, 0, 0, 0, 0, 0, 0 , 0 , 0]
            var previousDate = null;
            var lastDate = null;
            var firstDate = null;

            if(meetingArray.length){
                previousDate = meetingArray[0].date
                firstDate = meetingArray[0].date
                lastDate =  meetingArray[ meetingArray.length - 1 ].date
            }

            if( firstDate !== null && firstDate !== lastDate ) {
                meetingArray.forEach(function(meeting, index){
                    
                    if( previousDate === meeting.date ){
                        hourArray.forEach(function(hour, i){
                            let meetingTime = meeting.time.split(':')[0]
                            if(meetingTime === hour){
                                apptCounter[i]++
                            }
                        })
                    }
                    if( previousDate !== meeting.date || index === meetingArray.length - 1 ){
                        apptCounter.forEach(function(meetingsBooked, i){
                            if( meetingsBooked >= meetingMax ) {
                                var t = hourArray[i] + ":00";
                                parsedMeetingArray.push({ 
                                    title: "/*** FULL ***/ ",
                                    color:"#b7b7b7",
                                    start: previousDate + "T" + t
                                });
                                
                            }
                        })
                        apptCounter = [ 0, 0, 0, 0, 0, 0, 0, 0 , 0 , 0]
                                
                            hourArray.forEach(function(hour, i){
                                let meetingTime = meeting.time.split(':')[0]
                                if(meetingTime === hour){
                                    apptCounter[i]++
                                }
                            })
                            previousDate = meeting.date
                    }
                });
            }
            
            if( firstDate !== null  && firstDate === lastDate ){
                meetingArray.forEach(function(meeting, index){
                
                    hourArray.forEach(function(hour, i){
                        let meetingTime = meeting.time.split(':')[0]
                        if(meetingTime === hour){
                            apptCounter[i]++
                        }
                    })

                    if(index == meetingArray.length - 1){
                        apptCounter.forEach(function(meetingsBooked, i){
                            if( meetingsBooked >= meetingMax ) {
                                var t = hourArray[i] + ":00";
                                parsedMeetingArray.push({ 
                                    title: "/*** FULL ***/ ",
                                    color:"#b7b7b7",
                                    start: lastDate + "T" + t
                                });
                            }
                        })
                    }
                })
            }
            var calendarEl = document.getElementById('frontEndCalendar');
            var frontEndCalendar = new FullCalendar.Calendar( calendarEl, {
                eventClick: function(info){

                    $( "#popup-dialog" ).text(info.event.title + " at " + info.event.start)
                    $( "#popup-dialog" ).dialog({
                        modal: true,
                        dialogClass: "no-close",
                        buttons: {
                            OK: function() {
                                $( this ).dialog( "close" );
                                $( "#popup-dialog" ).text('');
                            }
                        }
                    });

                    popupModal.dialog('open');
                },
                events: 
                    parsedMeetingArray
                ,
                editable: false,
                initialView: 'timeGridWeek',
                slotMinTime: "07:00:00",
                slotMaxTime: "17:00:00",
                expandRows: true,
                headerToolbar: {
                    left: 'addEventButton',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,prev,next'
                },
                customButtons: {
                    addEventButton: {
                        text: 'add meeting',
                        click: function() {
                            $("#apptDialog").dialog('open');

                        }
                    }
                },
                
            });

            if(calendarEl){
                frontEndCalendar.render();
            }
        });
    // Google Analytics: change UA-XXXXX-X to be your site's ID
    script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-XXXXX-X', 'auto');
      ga('send', 'pageview');